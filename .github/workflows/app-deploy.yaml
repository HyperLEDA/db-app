name: Build and Push Docker Image

on:
  # workflow_dispatch:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build Docker image
        run: |
          GIT_VERSION=$(git rev-parse --short HEAD)
          docker build . -t ghcr.io/hyperleda/hyperleda:$GIT_VERSION
          docker save ghcr.io/hyperleda/hyperleda:$GIT_VERSION -o hyperleda_image.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: hyperleda_image
          path: hyperleda_image.tar

  push-docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: hyperleda_image
          path: .

      - name: Load Docker image
        run: docker load -i hyperleda_image.tar

      - name: Push Docker image to GitHub Packages
        run: |
          GIT_VERSION=$(git rev-parse --short HEAD)
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/hyperleda/hyperleda:$GIT_VERSION    
          docker tag ghcr.io/hyperleda/hyperleda:$GIT_VERSION ghcr.io/hyperleda/hyperleda:latest
          docker push ghcr.io/hyperleda/hyperleda:latest

  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add environments
        run: |
          echo "${{ secrets.JOB_ENVS }}" > infra/.env.local
          echo "${{ secrets.BACKEND_ENVS }}" >> infra/.env.remote

          set -a && source infra/.env.local && set +a
          export HOST=${{ secrets.BACKEND_HOST }}

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to backend
        run: |
          cd infra/scripts && ./deploy.sh

      - name: Restart application on backend
        run: |
          cd infra/scripts && ./restart.sh
