{
  "paths": {
    "/ping": {
      "get": {
        "summary": "Test that service is up and running",
        "tags": [
          "admin"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PingResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/source": {
      "post": {
        "summary": "New bibliographic entry",
        "description": "Creates new bibliographic entry in the database.",
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "tags": [
          "admin",
          "source"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Source was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/source": {
      "get": {
        "summary": "Get information about source",
        "description": "Retrieves information about the source using its id",
        "tags": [
          "source"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "HyperLeda source id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Source was successfully obtained",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/task": {
      "post": {
        "summary": "Start processing task",
        "description": "Starts background task.",
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "tags": [
          "admin",
          "tasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTaskRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task successfully started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get information about the task",
        "description": "Retrieves information about the task using its id.",
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "tags": [
          "tasks",
          "admin"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "task_id",
            "description": "ID of the task",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Task was successfully obtained",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTaskInfoResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/table": {
      "post": {
        "summary": "Create table with unprocessed data",
        "description": "Describes schema of the table without any data.",
        "tags": [
          "admin",
          "table"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTableRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Table was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTableResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/table/data": {
      "post": {
        "summary": "Add new raw data to the table",
        "description": "Inserts new data to the table.",
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "tags": [
          "admin",
          "table"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDataRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Source was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddDataResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "summary": "Login user with username and password",
        "description": "Gives user credentials for authentication in handlers",
        "tags": [
          "authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginResponseSchema"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "HyperLeda API specification",
    "version": "1.0.0"
  },
  "openapi": "3.0.2",
  "components": {
    "schemas": {
      "PingRequestSchema": {
        "type": "object",
        "properties": {}
      },
      "PingResponseSchema": {
        "type": "object",
        "properties": {
          "ping": {
            "type": "string",
            "example": "pong"
          }
        }
      },
      "CreateSourceRequestSchema": {
        "type": "object",
        "properties": {
          "bibcode": {
            "type": "string",
            "description": "Bibcode of publication",
            "example": "2001quant.ph..1003R"
          },
          "title": {
            "type": "string",
            "description": "Title of publication"
          },
          "authors": {
            "type": "array",
            "description": "List of authors",
            "items": {
              "type": "string"
            }
          },
          "year": {
            "type": "integer",
            "minimum": 0,
            "description": "Year of the publication"
          }
        }
      },
      "CreateSourceResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "HyperLeda bibliography id"
          }
        },
        "required": [
          "id"
        ]
      },
      "GetSourceRequestSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "HyperLeda source id"
          }
        },
        "required": [
          "id"
        ]
      },
      "GetSourceResponseSchema": {
        "type": "object",
        "properties": {
          "bibcode": {
            "type": "string",
            "description": "Bibcode of publication"
          },
          "title": {
            "type": "string",
            "description": "Title of publication"
          },
          "authors": {
            "type": "array",
            "description": "List of authors",
            "items": {
              "type": "string"
            }
          },
          "year": {
            "type": "integer",
            "description": "Year of the publication"
          }
        }
      },
      "StartTaskRequestSchema": {
        "type": "object",
        "properties": {
          "task_name": {
            "type": "string",
            "description": "Name of the task to start",
            "example": "echo"
          },
          "payload": {
            "type": "object",
            "description": "Payload to the task",
            "example": {
              "sleep_time_seconds": 2
            }
          }
        },
        "required": [
          "task_name"
        ]
      },
      "StartTaskResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the task"
          }
        }
      },
      "GetTaskInfoRequestSchema": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "integer",
            "description": "ID of the task"
          }
        },
        "required": [
          "task_id"
        ]
      },
      "GetTaskInfoResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the task"
          },
          "task_name": {
            "type": "string",
            "description": "Name of the task from task registry"
          },
          "status": {
            "type": "string",
            "description": "Task status"
          },
          "payload": {
            "type": "object",
            "description": "Payload to the task"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "Time when task started"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "Time when task ended"
          },
          "message": {
            "type": "object",
            "description": "Message associated with the task status"
          }
        }
      },
      "ColumnDescription": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the column"
          },
          "data_type": {
            "type": "string",
            "enum": [
              "str",
              "string",
              "int",
              "integer",
              "float",
              "double"
            ],
            "description": "Type of data"
          },
          "unit": {
            "type": "string",
            "description": "Unit of the data"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the column"
          }
        },
        "required": [
          "data_type",
          "name",
          "unit"
        ]
      },
      "CreateTableRequestSchema": {
        "type": "object",
        "properties": {
          "table_name": {
            "type": "string",
            "description": "Name of the table"
          },
          "columns": {
            "type": "array",
            "description": "List of columns in the table",
            "items": {
              "$ref": "#/components/schemas/ColumnDescription"
            }
          },
          "bibliography_id": {
            "type": "integer",
            "description": "ID of the bibliographic data assosiated with this table"
          },
          "datatype": {
            "type": "string",
            "default": "regular",
            "enum": [
              "regular",
              "reprocessing",
              "preliminary",
              "compilation"
            ],
            "description": "Type of the data in the table"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the table"
          }
        },
        "required": [
          "bibliography_id",
          "columns",
          "table_name"
        ]
      },
      "CreateTableResponseSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Output id of the table"
          }
        }
      },
      "AddDataRequestSchema": {
        "type": "object",
        "properties": {
          "table_id": {
            "type": "integer",
            "description": "ID of the table to add data to"
          },
          "data": {
            "type": "array",
            "description": "\n            Actual data to append. \n            Keys in this dictionary must be a subset of the columns in the table. \n            If not specified, column will be set to NULL.\n        ",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "data",
          "table_id"
        ]
      },
      "AddDataResponseSchema": {
        "type": "object",
        "properties": {}
      },
      "LoginRequestSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username"
          },
          "password": {
            "type": "string",
            "description": "Password"
          }
        },
        "required": [
          "password",
          "username"
        ]
      },
      "LoginResponseSchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token used to authenticate user in handlers that require a specific role to access"
          }
        }
      }
    }
  }
}